<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.web.mapper.MonsterMapper">
  <resultMap id="BaseResultMap" type="com.oracle.web.bean.Monster">
    <id column="MONSTER_ID" jdbcType="INTEGER" property="monsterId" />
    <result column="MNAME" jdbcType="VARCHAR" property="mname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="BIRTHDAY" jdbcType="DATE" property="birthday" />
    <result column="ENTRYDAY" jdbcType="DATE" property="entryday" />
    <result column="SCHOOL_FK" jdbcType="INTEGER" property="schoolFk" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    MONSTER_ID, MNAME, EMAIL, BIRTHDAY, ENTRYDAY, SCHOOL_FK
  </sql>
  <select id="selectByExample" parameterType="com.oracle.web.bean.MonsterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from monster
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from monster
    where MONSTER_ID = #{monsterId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from monster
    where MONSTER_ID = #{monsterId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oracle.web.bean.MonsterExample">
    delete from monster
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oracle.web.bean.Monster">
    insert into monster (MONSTER_ID, MNAME, EMAIL, 
      BIRTHDAY, ENTRYDAY, SCHOOL_FK
      )
    values (#{monsterId,jdbcType=INTEGER}, #{mname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{entryday,jdbcType=DATE}, #{schoolFk,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.oracle.web.bean.Monster">
    insert into monster
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="monsterId != null">
        MONSTER_ID,
      </if>
      <if test="mname != null">
        MNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
      <if test="entryday != null">
        ENTRYDAY,
      </if>
      <if test="schoolFk != null">
        SCHOOL_FK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="monsterId != null">
        #{monsterId,jdbcType=INTEGER},
      </if>
      <if test="mname != null">
        #{mname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="entryday != null">
        #{entryday,jdbcType=DATE},
      </if>
      <if test="schoolFk != null">
        #{schoolFk,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oracle.web.bean.MonsterExample" resultType="java.lang.Long">
    select count(*) from monster
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update monster
    <set>
      <if test="record.monsterId != null">
        MONSTER_ID = #{record.monsterId,jdbcType=INTEGER},
      </if>
      <if test="record.mname != null">
        MNAME = #{record.mname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.entryday != null">
        ENTRYDAY = #{record.entryday,jdbcType=DATE},
      </if>
      <if test="record.schoolFk != null">
        SCHOOL_FK = #{record.schoolFk,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update monster
    set MONSTER_ID = #{record.monsterId,jdbcType=INTEGER},
      MNAME = #{record.mname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=DATE},
      ENTRYDAY = #{record.entryday,jdbcType=DATE},
      SCHOOL_FK = #{record.schoolFk,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oracle.web.bean.Monster">
    update monster
    <set>
      <if test="mname != null">
        MNAME = #{mname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        BIRTHDAY = #{birthday,jdbcType=DATE},
      </if>
      <if test="entryday != null">
        ENTRYDAY = #{entryday,jdbcType=DATE},
      </if>
      <if test="schoolFk != null">
        SCHOOL_FK = #{schoolFk,jdbcType=INTEGER},
      </if>
    </set>
    where MONSTER_ID = #{monsterId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oracle.web.bean.Monster">
    update monster
    set MNAME = #{mname,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      BIRTHDAY = #{birthday,jdbcType=DATE},
      ENTRYDAY = #{entryday,jdbcType=DATE},
      SCHOOL_FK = #{schoolFk,jdbcType=INTEGER}
    where MONSTER_ID = #{monsterId,jdbcType=INTEGER}
  </update>
</mapper>